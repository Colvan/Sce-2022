{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar playersSetColor = [[], []];\n\nvar Brick = function Brick(_ref) {\n  var callback = _ref.callback,\n      index = _ref.index,\n      turn = _ref.turn;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      player = _useState2[0],\n      setPlayer = _useState2[1];\n\n  var clickHandler = function clickHandler() {\n    console.log(\"click Brick\");\n    setPlayer(turn.player);\n    callback(index);\n  };\n\n  var backColors = [\"white\", \"red\", \"green\"];\n  return _jsx(View, {\n    style: [styles.brick],\n    children: _jsx(TouchableOpacity, {\n      onPress: clickHandler,\n      style: [styles.brick, {\n        backgroundColor: backColors[player]\n      }]\n    })\n  });\n};\n\nfunction arrayAlreadyHasArray(arr, subarr) {\n  for (var i = 0; i < arr.length; i++) {\n    var checker = false;\n\n    for (var j = 0; j < arr[i].length; j++) {\n      if (arr[i][j] === subarr[j]) {\n        checker = true;\n      } else {\n        checker = false;\n        break;\n      }\n    }\n\n    if (checker) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar checkIfSomeOneWon = function checkIfSomeOneWon(setColors) {\n  var possibleComibnationWins = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  if (arrayAlreadyHasArray(possibleComibnationWins, setColors)) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nvar App = function App() {\n  var turn = {\n    player: 1\n  };\n\n  var clickHandler = function clickHandler(ind) {\n    console.log(\"click App \" + ind);\n    playersSetColor[turn.player - 1].push(ind);\n    playersSetColor[turn.player - 1].sort(function (a, b) {\n      return a - b;\n    });\n    var checkwinner = checkIfSomeOneWon(playersSetColor[turn.player - 1]);\n\n    if (checkwinner) {\n      alert(\"player\" + turn.player + \"won\");\n    }\n\n    if (turn.player == 1) {\n      turn.player = 2;\n    } else {\n      turn.player = 1;\n    }\n  };\n\n  var reloadHandler = function reloadHandler() {\n    console.log(\"click reloadHandler \");\n  };\n\n  console.log(\"Hello React\");\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"X Mix Drix\"\n    }), _jsxs(View, {\n      style: styles.rowContainer,\n      children: [_jsx(Brick, {\n        callback: clickHandler,\n        index: 0,\n        turn: turn\n      }), _jsx(Brick, {\n        callback: clickHandler,\n        index: 1,\n        turn: turn\n      }), _jsx(Brick, {\n        callback: clickHandler,\n        index: 2,\n        turn: turn\n      })]\n    }), _jsxs(View, {\n      style: styles.rowContainer,\n      children: [_jsx(Brick, {\n        callback: clickHandler,\n        index: 3,\n        turn: turn\n      }), _jsx(Brick, {\n        callback: clickHandler,\n        index: 4,\n        turn: turn\n      }), _jsx(Brick, {\n        callback: clickHandler,\n        index: 5,\n        turn: turn\n      })]\n    }), _jsxs(View, {\n      style: styles.rowContainer,\n      children: [_jsx(Brick, {\n        callback: clickHandler,\n        index: 6,\n        turn: turn\n      }), _jsx(Brick, {\n        callback: clickHandler,\n        index: 7,\n        turn: turn\n      }), _jsx(Brick, {\n        callback: clickHandler,\n        index: 8,\n        turn: turn\n      })]\n    }), _jsx(TouchableOpacity, {\n      onPress: reloadHandler,\n      children: _jsx(Text, {\n        style: styles.button,\n        children: \"RELOAD\"\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: StatusBar.currentHeight,\n    flex: 1,\n    backgroundColor: 'blue'\n  },\n  rowContainer: {\n    flexDirection: 'row'\n  },\n  label: {\n    flex: 1\n  },\n  child: {\n    margin: 5,\n    flex: 1,\n    aspectRatio: 1\n  },\n  brick: {\n    backgroundColor: \"white\",\n    margin: 5,\n    flex: 1,\n    aspectRatio: 1\n  },\n  title: {\n    fontSize: 30,\n    textAlign: \"center\"\n  },\n  button: {\n    margin: 5,\n    fontSize: 30,\n    textAlign: \"center\",\n    backgroundColor: \"grey\",\n    borderRadius: 10\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/yonib/Desktop/Personal Stuff/tictac/sce-2022-front/App.tsx"],"names":["React","useState","playersSetColor","Brick","callback","index","turn","player","setPlayer","clickHandler","console","log","backColors","styles","brick","backgroundColor","arrayAlreadyHasArray","arr","subarr","i","length","checker","j","checkIfSomeOneWon","setColors","possibleComibnationWins","App","ind","push","sort","a","b","checkwinner","alert","reloadHandler","container","title","rowContainer","button","StyleSheet","create","marginTop","StatusBar","currentHeight","flex","flexDirection","label","child","margin","aspectRatio","fontSize","textAlign","borderRadius"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { FC, useState } from 'react'\r\nimport { StyleSheet, Text, View, Image, TouchableOpacity, StatusBar } from 'react-native';\r\n\r\nconst playersSetColor: number[][] = [[],[]];\r\n\r\nconst Brick: FC<{ callback: (ind: number) => void, index: number,  turn: { player: number } }> = ({ callback, index, turn }) => {\r\n  const [player, setPlayer] = useState<number>(0)\r\n\r\n  const clickHandler = () => {\r\n    console.log(\"click Brick\")\r\n    setPlayer(turn.player)\r\n    callback(index)\r\n  }\r\n\r\n  const backColors = [\"white\", \"red\", \"green\"]\r\n  return (\r\n    <View style={[styles.brick]}>\r\n      <TouchableOpacity\r\n        onPress={clickHandler}\r\n        style={[styles.brick, { backgroundColor: backColors[player] }]}>\r\n      </TouchableOpacity>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction arrayAlreadyHasArray(arr: any[], subarr: any[]){\r\n  for(var i = 0; i<arr.length; i++){\r\n      let checker = false\r\n      for(var j = 0; j<arr[i].length; j++){\r\n          if(arr[i][j] === subarr[j]){\r\n              checker = true\r\n          } else {\r\n              checker = false\r\n              break;\r\n          }\r\n      }\r\n      if (checker){\r\n          return true\r\n      }\r\n  }\r\n  return false\r\n}\r\n\r\nconst checkIfSomeOneWon = (setColors: any) =>{\r\n  const possibleComibnationWins = [[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];\r\n  if(arrayAlreadyHasArray(possibleComibnationWins,setColors)){\r\n    return true;\r\n  }else{\r\n    return false;\r\n  }\r\n}\r\n\r\n\r\nconst App: FC = () => {\r\n  const turn = { player: 1 } //1: X , 2: O\r\n\r\n  const clickHandler = (ind: number) => {\r\n    console.log(\"click App \" + ind)\r\n    playersSetColor[turn.player-1].push(ind);\r\n    playersSetColor[turn.player-1].sort(function(a,b){return a-b});\r\n    let checkwinner =checkIfSomeOneWon(playersSetColor[turn.player-1]);\r\n    if(checkwinner){\r\n      alert(\"player\" + turn.player + \"won\")\r\n    }\r\n    if (turn.player == 1) {\r\n      turn.player = 2\r\n    } else {\r\n   \r\n      turn.player = 1\r\n    }\r\n  }\r\n\r\n  const reloadHandler = () => {\r\n    console.log(\"click reloadHandler \")\r\n    \r\n  }\r\n  console.log(\"Hello React\")\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>X Mix Drix</Text>\r\n      <View style={styles.rowContainer}>\r\n        <Brick callback={clickHandler} index={0} turn={turn}></Brick>\r\n        <Brick callback={clickHandler} index={1} turn={turn}></Brick>\r\n        <Brick callback={clickHandler} index={2} turn={turn}></Brick>\r\n      </View>\r\n      <View style={styles.rowContainer}>\r\n        <Brick callback={clickHandler} index={3} turn={turn}></Brick>\r\n        <Brick callback={clickHandler} index={4} turn={turn}></Brick>\r\n        <Brick callback={clickHandler} index={5} turn={turn}></Brick>\r\n      </View>\r\n      <View style={styles.rowContainer}>\r\n        <Brick callback={clickHandler} index={6} turn={turn}></Brick>\r\n        <Brick callback={clickHandler} index={7} turn={turn}></Brick>\r\n        <Brick callback={clickHandler} index={8} turn={turn}></Brick>\r\n      </View>\r\n      <TouchableOpacity onPress={reloadHandler}>\r\n        <Text style={styles.button}>RELOAD</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginTop: StatusBar.currentHeight,\r\n    flex: 1,\r\n    backgroundColor: 'blue',\r\n    // justifyContent: 'center',\r\n    // alignItems: 'center'\r\n  },\r\n  rowContainer: {\r\n    flexDirection: 'row',\r\n\r\n  },\r\n  label: {\r\n    flex: 1\r\n  },\r\n  child: {\r\n    margin: 5,\r\n    flex: 1,\r\n    aspectRatio: 1,\r\n  },\r\n  brick: {\r\n    backgroundColor: \"white\",\r\n    margin: 5,\r\n    flex: 1,\r\n    aspectRatio: 1,\r\n  },\r\n  title: {\r\n    fontSize: 30,\r\n    textAlign: \"center\"\r\n  },\r\n  button: {\r\n    margin: 5,\r\n    fontSize: 30,\r\n    textAlign: \"center\",\r\n    backgroundColor: \"grey\",\r\n    borderRadius: 10\r\n  }\r\n});\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}